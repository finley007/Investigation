<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >  
<generatorConfiguration>  
    <!-- 引入配置文件 -->  
    <!-- properties resource="init.properties"/-->  
      
    <!-- 指定数据连接驱动jar地址 -->  
    <classPathEntry location="E:\project\finley\Investigation\code\Stock\lib\mysql-connector-java-5.1.28-bin.jar" />  
      
    <!-- 一个数据库一个context -->  
    <context id="infoGuardian">  
        <!-- 注释 -->  
        <commentGenerator >  
            <property name="suppressAllComments" value="false"/><!-- 是否取消注释 -->  
            <property name="suppressDate" value="true" /> <!-- 是否生成注释代时间戳-->  
        </commentGenerator>  
          
        <!-- jdbc连接 -->  
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"  
            connectionURL="jdbc:mysql://127.0.0.1:3306/stock" 
			userId="root"  
            password="" />  
          
        <!-- 类型转换 -->  
        <javaTypeResolver>  
            <!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） -->  
            <property name="forceBigDecimals" value="false"/>  
        </javaTypeResolver>  
          
        <!-- 生成实体类地址 -->    
        <javaModelGenerator targetPackage="stock.model"  
            targetProject="E:/project/finley/Investigation/arti" >  
            <!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->  
            <property name="enableSubPackages" value="false"/>  
            <!-- 是否针对string类型的字段在set的时候进行trim调用 -->  
            <property name="trimStrings" value="true"/>  
        </javaModelGenerator>  
          
        <!-- 生成mapxml文件 -->  
        <sqlMapGenerator targetPackage="stock.model"  
            targetProject="E:/project/finley/Investigation/arti" >  
            <!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->  
            <property name="enableSubPackages" value="false" />  
        </sqlMapGenerator>  
          
        <!-- 生成mapxml对应client，也就是接口dao -->      
        <javaClientGenerator targetPackage="stock.dao"  
            targetProject="E:/project/finley/Investigation/arti" type="XMLMAPPER" >  
            <!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->  
            <property name="enableSubPackages" value="false" />  
        </javaClientGenerator>  
          
        <!-- 配置表信息 -->      
        <table schema="stock" tableName="my_stock"  
            domainObjectName="MyStock" enableCountByExample="false"  
            enableDeleteByExample="false" enableSelectByExample="false"  
            enableUpdateByExample="false">  
            <!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample   
                是否生成 example类   -->  
              
            <!-- 忽略列，不生成bean 字段 -->  
            <!-- ignoreColumn column="FRED" /-->  
            <!-- 指定列的java数据类型 -->  
            <!-- columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" /-->  
        </table>  

		<table schema="stock" tableName="all_stock"  
            domainObjectName="Stock" enableCountByExample="false"  
            enableDeleteByExample="false" enableSelectByExample="false"  
            enableUpdateByExample="false">  
            <!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample   
                是否生成 example类   -->  
              
            <!-- 忽略列，不生成bean 字段 -->  
            <!-- ignoreColumn column="FRED" /-->  
            <!-- 指定列的java数据类型 -->  
            <!-- columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" /-->  
        </table> 

		<table schema="stock" tableName="my_action"  
            domainObjectName="MyAction" enableCountByExample="false"  
            enableDeleteByExample="false" enableSelectByExample="false"  
            enableUpdateByExample="false">  
            <!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample   
                是否生成 example类   -->  
              
            <!-- 忽略列，不生成bean 字段 -->  
            <!-- ignoreColumn column="FRED" /-->  
            <!-- 指定列的java数据类型 -->  
            <!-- columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" /-->  
        </table> 

		<table schema="stock" tableName="rule_type"  
            domainObjectName="RuleType" enableCountByExample="false"  
            enableDeleteByExample="false" enableSelectByExample="false"  
            enableUpdateByExample="false">  
            <!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample   
                是否生成 example类   -->  
              
            <!-- 忽略列，不生成bean 字段 -->  
            <!-- ignoreColumn column="FRED" /-->  
            <!-- 指定列的java数据类型 -->  
            <!-- columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" /-->  
        </table> 

		<table schema="stock" tableName="rule_item"  
            domainObjectName="RuleItem" enableCountByExample="false"  
            enableDeleteByExample="false" enableSelectByExample="false"  
            enableUpdateByExample="false">  
            <!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample   
                是否生成 example类   -->  
              
            <!-- 忽略列，不生成bean 字段 -->  
            <!-- ignoreColumn column="FRED" /-->  
            <!-- 指定列的java数据类型 -->  
            <!-- columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" /-->  
        </table> 
  
		<table schema="stock" tableName="rule_result"  
            domainObjectName="RuleResult" enableCountByExample="false"  
            enableDeleteByExample="false" enableSelectByExample="false"  
            enableUpdateByExample="false">  
            <!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample   
                是否生成 example类   -->  
              
            <!-- 忽略列，不生成bean 字段 -->  
            <!-- ignoreColumn column="FRED" /-->  
            <!-- 指定列的java数据类型 -->  
            <!-- columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" /-->  
        </table> 

		<table schema="stock" tableName="rule_run_history"  
            domainObjectName="RuleRunHistory" enableCountByExample="false"  
            enableDeleteByExample="false" enableSelectByExample="false"  
            enableUpdateByExample="false">  
            <!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample   
                是否生成 example类   -->  
              
            <!-- 忽略列，不生成bean 字段 -->  
            <!-- ignoreColumn column="FRED" /-->  
            <!-- 指定列的java数据类型 -->  
            <!-- columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" /-->  
        </table> 

    </context>  
</generatorConfiguration>  